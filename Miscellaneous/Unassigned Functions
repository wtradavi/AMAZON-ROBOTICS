####################       TEMPLATES         #######################################

function drive_template {
    logo
    choose_selected_prompt

    if ! [[ $ANSWER = "y" ]] || [[ $ANSWER = "Y" ]]; then
        logo
        echo -e $RS"\nDrive(s):"$CE
        read -A du
    fi

    for drive in ${du[@]}; do
        echo -e $RS"\nRunning Command To Drive $drive\n"$CE
        #command
    done

    go_back_or_exit
}

function station_template {

    logo
    choose_selected_prompt

    if ! [[ $ANSWER = "y" ]] || [[ $ANSWER = "Y" ]]; then
        logo
        echo -e $RS"\nStation(s)"$CE
        read -A du
        
    fi

    for station in ${du[@]}; do
        floor="paKivaA0$station[1]"
        echo -e $RS"\nRunning Command on Station $station\n"$CE
        #command
    done

    go_back_or_exit
}

###########################      UNASSIGNED FUNCTIONS       ######################################


function unstuck_drive {
    logo
    echo -e $RS"SSH Selected Drive(s)? y/n"$CE
    prompt_num

    if [[ $ANSWER = "y" ]] || [[ $ANSWER = "Y" ]]; then
        for drive in ${du[@]}; do
            ssh root@kdu-$i "sudo mkdir -p /var/log/kiva; /sbin/reboot & exit"
        done 
    elif [[ $ANSWER = "n" ]] || [[ $ANSWER = "N" ]]; then
        ssh root@kdu-$du "sudo mkdir -p /var/log/kiva; /sbin/reboot & exit"
    fi
}



function create_drive_function {
    
    echo -e \$RS"Name of Function: "\$CE
    read -r name
    echo -e \$RS"Command: "\$CE
    read -r command
    echo -e \$RS"**********MESSAGE*********"\$CE
    echo -e \$RS"_____________________ Drive xxxxxx"\$CE
    read -r message
    echo "function $name {
    logo
    choose_selected_prompt

    if ! [[ \$ANSWER = "y" ]] || [[ \$ANSWER = "Y" ]]; then
        logo
        echo \$RS"Drive(s):"\$CE
        read -A du
    fi

    for drive in \${du[@]}; do
        echo -e \$RS"$message Drive \$drive"\$CE
        $command
    done

    go_back_or_exit
}
"
}


function complete_drive {
    logo
    choose_selected_prompt

    if ! [[ $ANSWER = "y" ]] || [[ $ANSWER = "Y" ]]; then
        logo
        echo -e $RS"\nDrive(s):"$CE
        read -A du
    fi

    for drive in ${du[@]}; do
        echo -e $RS"\nRunning Command To Drive $drive\n"$CE
        #command
    done

    go_back_or_exit
}

function ping_drive {
  choose_selected_prompt Ping

  if [[ $ANSWER = "n" ]] || [[ $ANSWER = "N" ]]; then
    drive_prompt
    i=0
    echo " "
    columnize 10 "Drive" "Wifi"

    for drive in ${du[@]}; do
      let "i=i+1"
      packet_loss=$(ping -w 1 -c 2 kdu-$drive | grep received | cut -d "," -f 3 | cut -d "%" -f 1)
      columnize 10 "$(echo -e $YS $i $CE)" "$drive" "$(if [[ $packet_loss == *"100"* ]]; then echo -e $RS"$(( 100 - $packet_loss))%"$CE; else echo -e $GNS"$(( 100 - $packet_loss))%"$CE; fi)"
    done

    echo " "
    echo " "

  elif [[ $ANSWER = "y" ]] || [[ $ANSWER = "Y" ]]; then
    i=0
    logo
    echo " "
    columnize 10 "Drive" "Wifi"

    for drive in ${du[@]}; do
      let "i=i+1"
      packet_loss=$(ping -w 1 -c 2 kdu-$drive | grep received | cut -d "," -f 3 | cut -d "%" -f 1)
      columnize 10 "$(echo -e $YS $i $CE)" "$drive" "$(if [[ $packet_loss == *"100"* ]]; then echo -e $RS"$(( 100 - $packet_loss))%"$CE; else echo -e $GNS"$(( 100 - $packet_loss))%"$CE; fi)"
    done

    echo " "
    echo " "

  else
    echo -e $RS"Something Went Wrong"
    go_back_or_exit
  fi
  go_back_or_exit
}
